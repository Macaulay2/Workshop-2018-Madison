// This file contains a collection of examples for benchmarking grobcov.lib in Singular.
// Timings were performed on a 2.3GHz i7-3615QM using Singular 4.1.1.
//
// sources:
//   KSW = Kapur, Sun, Wang, "An efficient method for computing comprehensive Groebner bases"

int t = timer;
system("--ticks-per-sec", 1000);
LIB "grobcov.lib";


// example 1, KSW Example 5.1
// cgs: 30
// cgb:
ring R = (0,a,b,c), (x,y), dp;
ideal F = a*x - b, b*y - a, c*x^2 - y, c*y^2 - x;

t = timer;
list CGS = cgsdr(F);
timer - t;

// example 2, KSW S1
// cgs: 110
// cgb: 
ring R = (32003,a,b,c), (x,y), dp;
ideal F = a*x^4*y + x*y^2 + b*x, x^3 + 2*x*y + c*y, x^2*y + b*x^2;

t = timer;
list CGS = cgsdr(F);
timer - t;

// example 3, KSW S2
// cgs: 170
// cgb:
ring R = (32003,a,b,c), (x,y), dp;
ideal F = a*x^2*y^3 + a*y + b*y, x^2*y^2 + x*y + 2*x, a*x^2 + b*y + 2*x;

t = timer;
list CGS = cgsdr(F);
timer - t;

// example 4, KSW S3
// cgs: 12870
// cgb:
ring R = (32003,a,b,c,d), (x,y), dp;
ideal F = a*x^4 + c*x^2 + y, b*x^3 + x^2 + y + 2, c*x^2 + d*x + y;

t = timer;
list CGS = cgsdr(F);
timer - t;

// example 5, KSW S4
// cgs: 1500
// cgb:
ring R = (32003,a,b,c,d), (x,y,z), dp;
ideal F = a*x^3*y + c*x*z^2, x^4*y + 3*d*y + z, c*x^2 + b*x*y, x^2*y^2 + x^2, x^5 + y^5;

t = timer;
list CGS = cgsdr(F);
timer - t;

// example 6, KSW S5
// cgs:
// cgb:
ring R = (32003,a,b,c), (x,y), dp;
ideal F = y^3 + b*x, a*x^2*y + b*x*y + c*x, y^2 + b*x^2*y + c*x*y;

t = timer;
list CGS = cgsdr(F);
timer - t;

// example 7, KSW S6
// cgs:
// cgb:
ring R = (32003,a,b,c,d), (x), dp;
ideal F = d*x^4 + a*x^3 + b*x^2 + c*x + d, 4*b*x^3 + 3*a*x^2 + 2*b*x + c;

t = timer;
list CGS = cgsdr(F);
timer - t;

// example 8, KSW S7
// cgs:
// cgb:
ring R = (32003,a,b,c,d), (x,y,z,w), dp;
ideal F = a*x^2 + b*y*z, c*w^2 + b*y + z, (x-z)^2 + (y-w)^2, 2*d*x*w - 2*b*y*z;

t = timer;
list CGS = cgsdr(F);
timer - t;

// example 9, KSW P3P
// cgs:
// cgb:
ring R = (32003,p,q,r,a,b), (x,y), dp;
ideal F = (1-a)*y^2 - a*x^2 - p*y + a*r*x*y + 1, (1-b)*x^2 - b*y^2 - q*x + b*r*x*y + 1;

t = timer;
list CGS = cgsdr(F);
timer - t;
